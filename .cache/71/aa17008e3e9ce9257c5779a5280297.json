{"id":"node_modules/@aws-sdk/property-provider/dist/cjs/ProviderError.js","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1600722302325},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/property-provider/package.json","includedInParent":true,"mtime":1600722667591},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/property-provider/dist/cjs/ProviderError.js","resolved":"/Users/spittela/code/giphlify/node_modules/tslib/tslib.es6.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProviderError = void 0;\nvar tslib_1 = require(\"tslib\");\n/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nvar ProviderError = /** @class */ (function (_super) {\n    tslib_1.__extends(ProviderError, _super);\n    function ProviderError(message, tryNextLink) {\n        if (tryNextLink === void 0) { tryNextLink = true; }\n        var _this = _super.call(this, message) || this;\n        _this.tryNextLink = tryNextLink;\n        return _this;\n    }\n    return ProviderError;\n}(Error));\nexports.ProviderError = ProviderError;\n"},"sourceMaps":{"js":{"version":3,"file":"ProviderError.js","sourceRoot":"","sources":["../../src/ProviderError.ts"],"names":[],"mappings":";;;;AAAA;;;;;;;;GAQG;AACH;IAAmC,yCAAK;IACtC,uBAAY,OAAe,EAAkB,WAA2B;QAA3B,4BAAA,EAAA,kBAA2B;QAAxE,YACE,kBAAM,OAAO,CAAC,SACf;QAF4C,iBAAW,GAAX,WAAW,CAAgB;;IAExE,CAAC;IACH,oBAAC;AAAD,CAAC,AAJD,CAAmC,KAAK,GAIvC;AAJY,sCAAa","sourcesContent":["/**\n * An error representing a failure of an individual credential provider.\n *\n * This error class has special meaning to the {@link chain} method. If a\n * provider in the chain is rejected with an error, the chain will only proceed\n * to the next provider if the value of the `tryNextLink` property on the error\n * is truthy. This allows individual providers to halt the chain and also\n * ensures the chain will stop if an entirely unexpected error is encountered.\n */\nexport class ProviderError extends Error {\n  constructor(message: string, public readonly tryNextLink: boolean = true) {\n    super(message);\n  }\n}\n"]}},"error":null,"hash":"1b1b580497b2be7d3d938eeefeedf41d","cacheData":{"env":{}}}