{"id":"node_modules/@aws-sdk/protocol-http/dist/cjs/httpResponse.js","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1600722302325},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/protocol-http/package.json","includedInParent":true,"mtime":1600722667590}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpResponse = void 0;\nvar HttpResponse = /** @class */ (function () {\n    function HttpResponse(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    HttpResponse.isInstance = function (response) {\n        //determine if response is a valid HttpResponse\n        if (!response)\n            return false;\n        var resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    };\n    return HttpResponse;\n}());\nexports.HttpResponse = HttpResponse;\n"},"sourceMaps":{"js":{"version":3,"file":"httpResponse.js","sourceRoot":"","sources":["../../src/httpResponse.ts"],"names":[],"mappings":";;;AAQA;IAKE,sBAAY,OAA4B;QACtC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;QACrC,IAAI,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;IAC3B,CAAC;IAEM,uBAAU,GAAjB,UAAkB,QAAiB;QACjC,+CAA+C;QAC/C,IAAI,CAAC,QAAQ;YAAE,OAAO,KAAK,CAAC;QAC5B,IAAM,IAAI,GAAG,QAAe,CAAC;QAC7B,OAAO,OAAO,IAAI,CAAC,UAAU,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,CAAC;IACjF,CAAC;IACH,mBAAC;AAAD,CAAC,AAjBD,IAiBC;AAjBY,oCAAY","sourcesContent":["import { HeaderBag, HttpMessage, HttpResponse as IHttpResponse } from \"@aws-sdk/types\";\n\ntype HttpResponseOptions = Partial<HttpMessage> & {\n  statusCode: number;\n};\n\nexport interface HttpResponse extends IHttpResponse {}\n\nexport class HttpResponse {\n  public statusCode: number;\n  public headers: HeaderBag;\n  public body?: any;\n\n  constructor(options: HttpResponseOptions) {\n    this.statusCode = options.statusCode;\n    this.headers = options.headers || {};\n    this.body = options.body;\n  }\n\n  static isInstance(response: unknown): response is HttpResponse {\n    //determine if response is a valid HttpResponse\n    if (!response) return false;\n    const resp = response as any;\n    return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n  }\n}\n"]}},"error":null,"hash":"615d80b279b18fb404b6e23349338d9c","cacheData":{"env":{}}}