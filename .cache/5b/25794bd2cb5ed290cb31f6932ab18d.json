{"id":"node_modules/@aws-sdk/middleware-retry/dist/cjs/retryMiddleware.js","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1600722302325},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/package.json","includedInParent":true,"mtime":1600722667342},{"name":"tslib","loc":{"line":4,"column":22},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/dist/cjs/retryMiddleware.js","resolved":"/Users/spittela/code/giphlify/node_modules/tslib/tslib.es6.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRetryPlugin = exports.retryMiddlewareOptions = exports.retryMiddleware = void 0;\nvar tslib_1 = require(\"tslib\");\nexports.retryMiddleware = function (options) { return function (next) { return function (args) { return tslib_1.__awaiter(void 0, void 0, void 0, function () { return tslib_1.__generator(this, function (_a) {\n    return [2 /*return*/, options.retryStrategy.retry(next, args)];\n}); }); }; }; };\nexports.retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n};\nexports.getRetryPlugin = function (options) { return ({\n    applyToStack: function (clientStack) {\n        clientStack.add(exports.retryMiddleware(options), exports.retryMiddlewareOptions);\n    },\n}); };\n"},"sourceMaps":{"js":{"version":3,"file":"retryMiddleware.js","sourceRoot":"","sources":["../../src/retryMiddleware.ts"],"names":[],"mappings":";;;;AAYa,QAAA,eAAe,GAAG,UAAC,OAA4B,IAAK,OAAA,UAC/D,IAAkC,IACD,OAAA,UACjC,IAAmC;IACQ,sBAAA,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAA;SAAA,EAFjD,CAEiD,EAJnB,CAImB,CAAC;AAExE,QAAA,sBAAsB,GAAqD;IACtF,IAAI,EAAE,iBAAiB;IACvB,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,IAAI,EAAE,iBAAiB;IACvB,QAAQ,EAAE,MAAM;CACjB,CAAC;AAEW,QAAA,cAAc,GAAG,UAAC,OAA4B,IAA0B,OAAA,CAAC;IACpF,YAAY,EAAE,UAAC,WAAW;QACxB,WAAW,CAAC,GAAG,CAAC,uBAAe,CAAC,OAAO,CAAC,EAAE,8BAAsB,CAAC,CAAC;IACpE,CAAC;CACF,CAAC,EAJmF,CAInF,CAAC","sourcesContent":["import {\n  AbsoluteLocation,\n  FinalizeHandler,\n  FinalizeHandlerArguments,\n  FinalizeHandlerOutput,\n  FinalizeRequestHandlerOptions,\n  MetadataBearer,\n  Pluggable,\n} from \"@aws-sdk/types\";\n\nimport { RetryResolvedConfig } from \"./configurations\";\n\nexport const retryMiddleware = (options: RetryResolvedConfig) => <Output extends MetadataBearer = MetadataBearer>(\n  next: FinalizeHandler<any, Output>\n): FinalizeHandler<any, Output> => async (\n  args: FinalizeHandlerArguments<any>\n): Promise<FinalizeHandlerOutput<Output>> => options.retryStrategy.retry(next, args);\n\nexport const retryMiddlewareOptions: FinalizeRequestHandlerOptions & AbsoluteLocation = {\n  name: \"retryMiddleware\",\n  tags: [\"RETRY\"],\n  step: \"finalizeRequest\",\n  priority: \"high\",\n};\n\nexport const getRetryPlugin = (options: RetryResolvedConfig): Pluggable<any, any> => ({\n  applyToStack: (clientStack) => {\n    clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n  },\n});\n"]}},"error":null,"hash":"a895cadc30e40f71b0f7a43e453dec42","cacheData":{"env":{}}}