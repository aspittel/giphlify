{"id":"node_modules/@aws-sdk/middleware-retry/dist/cjs/retryDecider.js","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1600722302325},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/package.json","includedInParent":true,"mtime":1600722667342},{"name":"@aws-sdk/service-error-classification","loc":{"line":4,"column":45},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-retry/dist/cjs/retryDecider.js","resolved":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/service-error-classification/dist/cjs/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defaultRetryDecider = void 0;\nvar service_error_classification_1 = require(\"@aws-sdk/service-error-classification\");\nexports.defaultRetryDecider = function (error) {\n    if (!error) {\n        return false;\n    }\n    return service_error_classification_1.isRetryableByTrait(error) || service_error_classification_1.isClockSkewError(error) || service_error_classification_1.isThrottlingError(error) || service_error_classification_1.isTransientError(error);\n};\n"},"sourceMaps":{"js":{"version":3,"file":"retryDecider.js","sourceRoot":"","sources":["../../src/retryDecider.ts"],"names":[],"mappings":";;;AAAA,sFAK+C;AAGlC,QAAA,mBAAmB,GAAG,UAAC,KAAe;IACjD,IAAI,CAAC,KAAK,EAAE;QACV,OAAO,KAAK,CAAC;KACd;IAED,OAAO,iDAAkB,CAAC,KAAK,CAAC,IAAI,+CAAgB,CAAC,KAAK,CAAC,IAAI,gDAAiB,CAAC,KAAK,CAAC,IAAI,+CAAgB,CAAC,KAAK,CAAC,CAAC;AACrH,CAAC,CAAC","sourcesContent":["import {\n  isClockSkewError,\n  isRetryableByTrait,\n  isThrottlingError,\n  isTransientError,\n} from \"@aws-sdk/service-error-classification\";\nimport { SdkError } from \"@aws-sdk/smithy-client\";\n\nexport const defaultRetryDecider = (error: SdkError) => {\n  if (!error) {\n    return false;\n  }\n\n  return isRetryableByTrait(error) || isClockSkewError(error) || isThrottlingError(error) || isTransientError(error);\n};\n"]}},"error":null,"hash":"2f2b9c9f69e5e89139c1067dbfc8cc7d","cacheData":{"env":{}}}