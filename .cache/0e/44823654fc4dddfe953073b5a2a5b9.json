{"id":"node_modules/@aws-sdk/smithy-client/dist/cjs/command.js","dependencies":[{"name":"/Users/spittela/code/giphlify/package.json","includedInParent":true,"mtime":1600722302325},{"name":"/Users/spittela/code/giphlify/.babelrc","includedInParent":true,"mtime":1599669969128},{"name":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/smithy-client/package.json","includedInParent":true,"mtime":1600722667580},{"name":"@aws-sdk/middleware-stack","loc":{"line":4,"column":33},"parent":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/smithy-client/dist/cjs/command.js","resolved":"/Users/spittela/code/giphlify/node_modules/@aws-sdk/middleware-stack/dist/cjs/index.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Command = void 0;\nvar middleware_stack_1 = require(\"@aws-sdk/middleware-stack\");\nvar Command = /** @class */ (function () {\n    function Command() {\n        this.middlewareStack = new middleware_stack_1.MiddlewareStack();\n    }\n    return Command;\n}());\nexports.Command = Command;\n"},"sourceMaps":{"js":{"version":3,"file":"command.js","sourceRoot":"","sources":["../../src/command.ts"],"names":[],"mappings":";;;AAAA,8DAA4D;AAG5D;IAAA;QAQW,oBAAe,GAAoC,IAAI,kCAAe,EAAiB,CAAC;IAMnG,CAAC;IAAD,cAAC;AAAD,CAAC,AAdD,IAcC;AAdqB,0BAAO","sourcesContent":["import { MiddlewareStack } from \"@aws-sdk/middleware-stack\";\nimport { Command as ICommand, Handler, MetadataBearer, MiddlewareStack as IMiddlewareStack } from \"@aws-sdk/types\";\n\nexport abstract class Command<\n  Input extends ClientInput,\n  Output extends ClientOutput,\n  ResolvedClientConfiguration,\n  ClientInput extends object = any,\n  ClientOutput extends MetadataBearer = any\n> implements ICommand<ClientInput, Input, ClientOutput, Output, ResolvedClientConfiguration> {\n  abstract input: Input;\n  readonly middlewareStack: IMiddlewareStack<Input, Output> = new MiddlewareStack<Input, Output>();\n  abstract resolveMiddleware(\n    stack: MiddlewareStack<ClientInput, ClientOutput>,\n    configuration: ResolvedClientConfiguration,\n    options: any\n  ): Handler<Input, Output>;\n}\n"]}},"error":null,"hash":"d36d16680785c5e7a6becb892654e2c5","cacheData":{"env":{}}}